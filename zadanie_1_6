#include "stdafx.h"
#include <iostream>
#include <math.h>
#include <conio.h>
#define M_PI       3.14159
#pragma pack()
 
using namespace std;
 
class Angle
{
private:
    int _gradusy, _minute;
 
public:
    Angle (int gradusy, int minute)
        : _gradusy (gradusy),_minute(minute){}
 
    Angle ()
        : _gradusy (0),_minute(0){}
    
    ~Angle (){}
 
    int getGradusy() {return _gradusy;}
    int getMinute() {return _minute;}
 
    void removeRoughs()
    {   _minute += _gradusy*60;
        _gradusy = _minute/60;
        _minute = _minute%60;
    }
    
    void setAngle()
    {  
        cout<<"Градусов = ";
        cin>>_gradusy;
        cout<<"Минут = ";
        cin>>_minute;
        this->removeRoughs();
    }
 
    void increaseAngle()
    {   Angle a;
        a.setAngle();
        _gradusy += a.getGradusy();
        _minute += a.getMinute();
        this->removeRoughs();
    }
 
    void decreaseAngle()
    {   Angle a;
        a.setAngle();
        _gradusy -= a.getGradusy();
        _minute -= a.getMinute();
        this->removeRoughs();
    }   
 
    double getRadians()
    {   return (_gradusy+_minute/60.)*M_PI/180.;
    }
 
    void intoRange()
    {   if(_minute<0)
        {   _gradusy--;
            _minute += 60;
        }
        if(_gradusy>0)_gradusy = _gradusy%360;
        else _gradusy = _gradusy%360+360;
    }
 
    double sinA()
    {   return sin(this->getRadians());
    }
 
    friend int angleCmp(Angle &a1, Angle &a2)
    {   int m1 = a1.getMinute()+a1.getGradusy()*60;
        int m2 = a2.getMinute()+a2.getGradusy()*60;
        if(m1<m2) return -1;
            else if(m1>m2) return 1;
                else return 0;
    }
};
 
 
int main ()
{setlocale (LC_ALL, "Russian");
int A;         
    Angle d1;
    cout<<"Первоначальное значение для угла d1:"; 
    cout<<"\nГрадусов = "<<d1.getGradusy()<<"\nМинут = "<<d1.getMinute()<<"\n";
 
    Angle d2;
    cout<<"\nПервоначальное значение для d2:"; 
    cout<<"\nГрадусов = "<<d2.getGradusy()<<" \nМинут =  "<<d2.getMinute()<<"\n";
 
    cout<<"------------------------------------------";
    cout<<"\nВведите новое значение для угла d1\n";
    d1.setAngle();
    cout<<"\nугол d1 стал равен \nГрадусов = "<<d1.getGradusy()<<"\nМинут = "<<d1.getMinute()<<"\n";
 

    cout<<"\nВведите новое значение для угла d2\n";
    d2.setAngle();
    cout<<"\nугол d2 стал равен \nГрадусов =  "<<d2.getGradusy()<<"\nМинут = "<<d2.getMinute()<<"\n";
 

    cout<<"------------------------------------------";
    cout<<"\nДобавить значение в угол d1\n";
    d1.increaseAngle();
    cout<<"\nугол d1 стал равен \nГрадусов = "<<d1.getGradusy()<<"\nМинут = "<<d1.getMinute()<<"\n";
 

    cout<<"\nМинус значение для угла d1\n";
    d1.decreaseAngle();
    cout<<"\nугол d1 стал равен \nГрадусов = "<<d1.getGradusy()<<"\nМинут = "<<d1.getMinute()<<"\n";
 

 
    cout<<"\n угол d1 в радианах = "<<d1.getRadians();
    cout<<"\n угол d2 в радианах = "<<d2.getRadians();
 

    cout<<"\n------------------------------------------";
    cout<<"\nПриведение угла d3 к диапазону <0 - 360>\n";
    Angle d3;
    d3.setAngle();
    d3.intoRange();
    cout<<"\nугол d3 в диапазоне <0-360>  "<<"\nГрадусов = "<<d3.getGradusy()<<"\nМинут = "<<d3.getMinute()<<"\n";
 
    cout<<"\n------------------------------------------";
    cout<<"\nСинусы для углов d1, d2, d3\n";
    cout<<"синус угла d1 = "<<d1.sinA()<<"\n";
    cout<<"синус угла d2 = "<<d2.sinA()<<"\n";
    cout<<"синус угла d3 = "<<d3.sinA()<<"\n";
 
    cout<<"\n------------------------------------------";
    cout<<"\nСравнение углов d1 и d2\n";
    cout<<"угол d1 \nГрадусов = "<<d1.getGradusy()<<" Минут = "<<d1.getMinute()<<"\n";
    cout<<"угол d2 \nГрадусов = "<<d2.getGradusy()<<" Минут = "<<d2.getMinute()<<"\n";
    int res = angleCmp(d1,d2);
    if(res==-1) cout<<"d1 < d2\n";
        else if(res==1) cout<<"d1 > d2\n";
            else cout<<"d1 = d2\n";
 
    cin.get();
    A=sizeof(Angle); 
    cout<<"\n------------------------------------------";
    cout<<"\nРазмер класса Angle в байтах = "<<A; 
    _getch();
    return 0;
}
